plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.8'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.kb'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

bootJar {
    mainClass = 'com.kb.kobo.KoBoApplication'
}

dependencies {
    // Spring Boot Starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security Starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Data JPA Starter
    implementation 'org.springframework.boot:spring-boot-starter-web' // Spring Web Starter
    implementation 'org.springframework.boot:spring-boot-starter-jdbc' // Spring JDBC Starter

    // Jakarta EE (Spring Boot 2.6 이상부터 Jakarta EE 사용 권장)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools' // 개발 도구

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core'

    // AWS SDK Dependency
    implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.213'

    // JDBC Dependency
    runtimeOnly 'mysql:mysql-connector-java'

    // Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Jackson Datatype JSR-310 모듈 추가
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'ch.qos.logback:logback-classic:1.2.6'

    // Swagger (SpringDoc OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.15'

    // JWT 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // dotenv (환경 변수 관리)
    implementation 'io.github.cdimascio:dotenv-java:2.2.0'

    // JSON Parsing
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.json:json:20211205'

    // Jackson Core & Databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'

    // WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

tasks.named('test') {
    useJUnitPlatform()
    enabled = false // 테스트 비활성화
}
